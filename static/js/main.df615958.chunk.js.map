{"version":3,"sources":["apis/api.js","actions/error.js","actions/loading.js","actions/countries.js","actions/slot.js","reducers/index.js","reducers/countries.js","reducers/error.js","reducers/loading.js","reducers/filteredCountries.js","reducers/search.js","reducers/allCountries.js","reducers/slot.js","middlewares/index.js","components/Sidebar.js","components/Input.js","components/QuestionOne.js","components/Country.js","components/QuestionTwo.js","components/QuestionThree.js","components/QuestionFour.js","components/Home.js","components/App.js","index.js"],"names":["axios","create","baseURL","getError","error","type","getLoadingStatus","status","search","term","fetchCountry","name","dispatch","api","get","then","country","getCountry","data","catch","response","filterCountries","filters","countries","getFilteredCountries","getSpinResult","result","fetchSpinResult","getState","initialCoin","slot","coins","combineReducers","state","action","message","loading","filteredCountries","allCountries","applyMiddleware","thunk","Sidebar","activeClassName","to","Input","handleChange","evt","setState","target","value","props","filter","submitInput","handleSubmit","className","this","onChange","placeholder","onClick","disabled","Component","connect","QuestionOne","submitCountryName","capital","flag","currencies","currency","style","color","src","alt","code","symbol","Country","width","QuestionTwo","submitFilters","filteredArr","split","join","map","key","QuestionThree","getCountries","toLowerCase","includes","QuestionFour","startSpin","reset","spin","marginTop","Home","marginBottom","margin","href","App","basename","path","exact","component","store","createStore","reducers","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df615958.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://betit-eu.herokuapp.com'\r\n})","export const ERROR = 'ERROR'\r\n\r\n\r\nexport const getError = (error) => {\r\n  return {\r\n    type: ERROR,\r\n    error\r\n  }\r\n}","export const TOGGLE_LOADING = 'TOOGLE_LOADING';\r\n\r\n\r\n\r\nexport const getLoadingStatus = (status) => {\r\n  return {\r\n    type: TOGGLE_LOADING,\r\n    status\r\n  }\r\n}","import api from \"../apis/api\";\r\nimport { getError } from \"./error\";\r\nimport { getLoadingStatus } from \"./loading\";\r\n\r\nexport const GET_COUNTRY = \"GET_COUNTRY\";\r\n\r\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\r\n\r\nexport const GET_FILTERED_COUNTRIES = \"GET_FILTERED_COUNTRIES\";\r\n\r\nexport const SEARCH_TERM = \"SEARCH_TERM\";\r\n\r\nexport const getCountry = (country) => {\r\n  return {\r\n    type: GET_COUNTRY,\r\n    country,\r\n  };\r\n};\r\n\r\nexport const getCountries = (countries) => {\r\n  return {\r\n    type: GET_COUNTRIES,\r\n    countries,\r\n  };\r\n};\r\n\r\nexport const getFilteredCountries = (countries) => {\r\n  return {\r\n    type: GET_FILTERED_COUNTRIES,\r\n    countries,\r\n  };\r\n};\r\n\r\nexport const search = (term) => {\r\n  return {\r\n    type: SEARCH_TERM,\r\n    term,\r\n  };\r\n};\r\n\r\nexport const fetchCountry = (name) => {\r\n  return (dispatch) => {\r\n    dispatch(getLoadingStatus(true));\r\n    api\r\n      .get(`/api/${name}`)\r\n      .then((country) => {\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getCountry(country.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getError(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const filterCountries = (filters) => {\r\n  return (dispatch) => {\r\n    dispatch(getLoadingStatus(true));\r\n    api\r\n      .get(`/api/filter?words=${filters}`)\r\n      .then((countries) => {\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getFilteredCountries(countries.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getError(error.response.data));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getAllCountries = () => {\r\n  return dispatch => {\r\n    dispatch(getLoadingStatus(true));\r\n    api\r\n      .get(`/api/all`)\r\n      .then((countries) => {\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getCountries(countries.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getError(error.response.data));\r\n      });\r\n  }\r\n}","import api from '../apis/api'\r\nimport { getError } from \"./error\";\r\nimport { getLoadingStatus } from \"./loading\";\r\n\r\nexport const SPIN_DATA = 'SPIN_DATA'\r\n\r\n\r\nexport const getSpinResult = (result) => {\r\n  return {\r\n    type: SPIN_DATA,\r\n    result\r\n  }\r\n}\r\n\r\n\r\nexport const fetchSpinResult = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch(getLoadingStatus(true));\r\n    api\r\n      .get(`/api/spin`)\r\n      .then((result) => {\r\n        let {initialCoin} = getState().slot\r\n        const {coins} = result.data\r\n        initialCoin = (initialCoin - 1) + coins\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getSpinResult({...result.data, initialCoin}));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getLoadingStatus(false));\r\n        dispatch(getError(error.response.data));\r\n      });\r\n  };\r\n}","import { country } from './countries';\r\nimport { error } from './error'\r\nimport { loading } from './loading'\r\nimport {filteredCountries} from './filteredCountries'\r\nimport { search } from './search'\r\nimport { allCountries } from './allCountries'\r\nimport { slot } from './slot'\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\n\r\n\r\nexport default combineReducers({\r\n  country,\r\n  error,\r\n  loading,\r\n  filteredCountries,\r\n  search,\r\n  allCountries,\r\n  slot\r\n})","import { GET_COUNTRY } from '../actions/countries';\r\n\r\n\r\n\r\nexport const country = (state={}, action) => {\r\n\r\n  switch(action.type) {\r\n    case GET_COUNTRY: \r\n     return {...state, ...action.country}\r\n    default: \r\n    return state\r\n  }\r\n\r\n}","import { ERROR } from '../actions/error'\r\n\r\n\r\n\r\nexport const error = (state={message: ''}, action) => {\r\n\r\n  switch(action.type){\r\n    case ERROR:\r\n      return {...state, ...action.error}\r\n    default:\r\n      return state  \r\n  }\r\n}","import { TOGGLE_LOADING } from '../actions/loading'\r\n\r\n\r\nexport const loading = (state={status:false}, action) => {\r\n  switch(action.type) {\r\n    case TOGGLE_LOADING:\r\n      return {...state, status: action.status}\r\n    default:\r\n      return state;   \r\n  }\r\n}","import { GET_FILTERED_COUNTRIES } from '../actions/countries';\r\n\r\n\r\n\r\nexport const filteredCountries = (state=[], action) => {\r\n\r\n  switch(action.type) {\r\n      case GET_FILTERED_COUNTRIES:\r\n        return [...action.countries]\r\n      default:\r\n        return state;  \r\n  }\r\n\r\n}","import { SEARCH_TERM } from '../actions/countries'\r\n\r\n\r\n\r\nexport const search = (state={term: ''}, action) => {\r\n\r\n  switch(action.type){\r\n    case SEARCH_TERM :\r\n      return {...state, term: action.term}\r\n    default:\r\n      return state  \r\n  }\r\n}","import { GET_COUNTRIES } from \"../actions/countries\";\r\n\r\nexport const allCountries = (state = [], action) => {\r\n  switch (action.type) {\r\n    case GET_COUNTRIES:\r\n      return [...action.countries];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SPIN_DATA } from '../actions/slot'\r\n\r\n\r\n\r\nexport const slot = (state={initialCoin: 20}, action) => {\r\n\r\n  switch(action.type){\r\n    case SPIN_DATA:\r\n      return {...state, ...action.result}\r\n    default:\r\n      return state  \r\n  }\r\n}","import thunk from \"redux-thunk\";\r\n\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport default applyMiddleware(thunk);\r\n","import React, { Fragment } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <Fragment>\r\n      <ul>\r\n        <li>\r\n          <NavLink activeClassName=\"active\" to=\"/question-one\">\r\n            QUESTION ONE\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"active\" to=\"/question-two\">\r\n            QUESTION TWO\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"active\" to=\"/question-three\">\r\n            QUESTION THREE\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"active\" to=\"/question-four\">\r\n            QUESTION FOUR\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport {search} from '../actions/countries'\r\n\r\nclass Input extends Component {\r\n  state = {\r\n    search: \"\"\r\n  };\r\n\r\n  \r\n  handleChange = (evt) => {\r\n    this.setState({\r\n      search: evt.target.value,\r\n    });\r\n\r\n   if(this.props.filter) {\r\n      this.props.dispatch(search(this.state.search))\r\n    }\r\n\r\n  };\r\n\r\n  submitInput = () => {\r\n    this.props.handleSubmit(this.state.search)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <input\r\n          className=\"y-input\"\r\n          value={this.state.search}\r\n          onChange={this.handleChange}\r\n          placeholder={this.props.placeholder}\r\n        />\r\n        <button\r\n          onClick={this.submitInput}\r\n          disabled={!this.state.search}\r\n          className=\"btn\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(Input);","import React, { Component } from \"react\";\r\nimport { fetchCountry } from \"../actions/countries\";\r\nimport { connect } from \"react-redux\";\r\nimport { getError } from \"../actions/error\";\r\nimport Input from \"./Input\";\r\n\r\nclass QuestionOne extends Component {\r\n  \r\n  submitCountryName = (search) => {\r\n    this.props.dispatch(getError({ message: \"\" }));\r\n    this.props.dispatch(fetchCountry(search));\r\n  };\r\n\r\n  render() {\r\n    const { name, capital, flag, currencies } = this.props.country;\r\n    const [currency] = currencies || [];\r\n    const { error, loading } = this.props;\r\n\r\n    if (loading.status) {\r\n      return <h3>Loading...</h3>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Input handleSubmit={this.submitCountryName} placeholder='Enter a country full name' />\r\n\r\n        {error.message ? (\r\n          <h4 style={{ color: \"red\" }}>{error.message}</h4>\r\n        ) : (\r\n          <div className=\"country\">\r\n            <div className=\"flag\">\r\n              <img src={flag} alt={name} />\r\n            </div>\r\n            <div className=\"country-details\">\r\n              <ul>\r\n                <li>{name ? `Name: ${name}` : null}</li>\r\n                <li>{capital ? `Capital: ${capital}` : null}</li>\r\n                <li>{currency ? `Curreny Code: ${currency.code}` : null}</li>\r\n                <li>\r\n                  {currency ? `Curreny symbol: ${currency.symbol}` : null}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ country, error, loading }) => ({\r\n  country,\r\n  error,\r\n  loading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(QuestionOne);\r\n","import React from \"react\";\r\n\r\nconst Country = (props) => {\r\n  return (\r\n    <div className=\"countries-item\">\r\n      <img src={props.country.flag} alt={props.country.name} style={{ width: \"100%\" }} />\r\n      <p>{props.country.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Country;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Input from \"./Input\";\r\nimport { filterCountries } from \"../actions/countries\";\r\nimport Country from \"./Country\";\r\n\r\nclass QuestionTwo extends Component {\r\n  submitFilters = (filters) => {\r\n    const filteredArr = filters.split(\" \").join(\",\");\r\n    this.props.dispatch(filterCountries(filteredArr));\r\n  };\r\n\r\n  render() {\r\n    const { countries, loading } = this.props;\r\n\r\n    if (loading.status) {\r\n      return <h3>Loading...</h3>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Input\r\n          handleSubmit={this.submitFilters}\r\n          placeholder=\"Enter words to separeted by space to filter\"\r\n        />\r\n        <div className=\"countries\">\r\n          {countries.map((country) => (\r\n            <Country key={country.name} country={country} />\r\n          ))}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ filteredCountries, loading }) => ({\r\n  countries: filteredCountries,\r\n  loading,\r\n});\r\n\r\nexport default connect(mapStateToProps)(QuestionTwo);\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Input from './Input'\r\nimport { getAllCountries } from '../actions/countries'\r\nimport Country from './Country'\r\nimport { loading } from '../reducers/loading'\r\n\r\n\r\nclass QuestionThree extends Component {\r\n\r\n  componentDidMount () {\r\n    this.props.dispatch(getAllCountries())\r\n  }\r\n\r\n  render() {\r\n    const {countries, loading, search} = this.props\r\n     \r\n    if (loading.status) {\r\n      return <h3>Loading...</h3>;\r\n    }\r\n\r\n    return(\r\n      <div>\r\n        <Input \r\n        handleSubmit={() => {}}\r\n        placeholder=\"search countries\"\r\n        filter={true}\r\n        />\r\n        <div className=\"countries\">\r\n        {countries.filter((country) => country.name.toLowerCase().includes(search.term))\r\n          .map((country) => (\r\n          <Country key={country.name} country={country} />\r\n        ))}\r\n        </div>    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({allCountries,loading, search}) => ({\r\n  countries: allCountries,\r\n  loading,\r\n  search\r\n})\r\n\r\nexport default connect(mapStateToProps)(QuestionThree);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchSpinResult, getSpinResult } from \"../actions/slot\";\r\n\r\nclass QuestionFour extends Component {\r\n  startSpin = () => {\r\n    this.props.dispatch(fetchSpinResult());\r\n  };\r\n\r\n  reset = () => {\r\n    this.props.dispatch(\r\n      getSpinResult({ initialCoin: 20, spin: null, coins: null })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { initialCoin, spin, coins } = this.props.slot;\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"spin-container\">\r\n        <h3>No of Coins : {initialCoin} </h3>\r\n        <div className=\"btn-group\">\r\n          <button\r\n            onClick={this.startSpin}\r\n            disabled={initialCoin <= 0 || loading.status}\r\n            className=\"btn btn-spin\"\r\n          >\r\n            SPIN\r\n          </button>\r\n\r\n          <button onClick={this.reset} className=\"btn btn-spin\">\r\n            RESET\r\n          </button>\r\n        </div>\r\n\r\n        {loading.status ? (\r\n          <h4>Loading...</h4>\r\n        ) : (\r\n          <div>\r\n            <h2>Result: {spin} </h2>\r\n            <h3 style={{ marginTop: \"40px\" }}>No of coins won: {coins}</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapPropsToState = ({ slot, loading }) => ({\r\n  slot,\r\n  loading,\r\n});\r\n\r\nexport default connect(mapPropsToState)(QuestionFour);\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1 style={{marginBottom: '2rem'}}>Techincal Assessment solutions</h1>\r\n      <p>Click on the link on the sidebar for each question to assess solutions</p>\r\n      <p>Below are links to the node api and react app repositories</p>\r\n      <ul style={{margin: '2rem 0'}}>\r\n        <li><a target=\"_blank\" href=\"https://github.com/asyncmania/eu-backend\">Node API</a></li>\r\n        <li><a target=\"_blank\" href=\"https://github.com/asyncmania/ec-react\">React App</a></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Sidebar from \"./Sidebar\";\nimport QuestionOne from \"./QuestionOne\";\nimport QuestionTwo from \"./QuestionTwo\";\nimport QuestionThree from \"./QuestionThree\";\nimport QuestionFour from \"./QuestionFour\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router basename=\"/\">\n        <div className=\"sidebar\">\n          <Sidebar />\n        </div>\n        <div className=\"content\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/question-one\" component={QuestionOne} />\n          <Route path=\"/question-two\" component={QuestionTwo} />\n          <Route path=\"/question-three\" component={QuestionThree} />\n          <Route path=\"/question-four\" component={QuestionFour} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport middleware from \"./middlewares\";\n\nimport App from \"./components/App\";\nimport \"./main.css\";\n\nconst store = createStore(reducers, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}